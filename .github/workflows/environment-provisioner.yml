name: "Environment Provisioner"

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    branches: [ main ]

jobs:
  terraform:
    name: "Environment Provisioner"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
        run: echo ${{ github.event.inputs.distinct_id }}    

      - name: Configure default variables
        env:
          DEFAULT_TARGET: 'mcp'
          DEFAULT_REPO: 'unity-sds/unity-cs-sps-demo'
          DEFAULT_COMMIT: 'smolenski_tf_test_mcp'
          DEFAULT_STAGE: 'DEV'
          DEFAULT_PROJECT: 'UNITY'
          DEFAULT_OWNER: 'nightly'
          DEFAULT_EKSCLUSTERNAME: 'testtommon6'
        run: |
          echo "TARGET_ENV=${{ github.event.inputs.deploymentTarget || env.DEFAULT_TARGET }}" >> $GITHUB_ENV
          echo "TARGET_STAGE=${{ github.event.inputs.deploymentStage || env.DEFAULT_STAGE }}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: ${{ INPUTS.awsConnection == 'oidc' }}
        with:
          role-to-assume: ${{ secrets[format('OIDC_{0}_ROLE', env.TARGET_STAGE)] }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          # terraform_version: 1.4.2
          # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true
