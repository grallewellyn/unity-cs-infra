name: Nightly Build for Development Purposes Only
on:
  workflow_dispatch:
    branches: [ main ]
    inputs:
      KEY:
        description: 'Access Key ID'
        required: false
        type: string
        default: ''
      SECRET:
        description: 'Access Secret Key ID'
        required: false
        type: string
        default: ''
      TOKEN:
        description: 'AWS Session Token'
        required: false
        type: string
        default: ''
      METADATA:
        description: 'UCS Metadata Definition'
        required: true
        type: string
        default: '{"metadataVersion":"unity-cs-0.1","exectarget": "github","deploymentName":"some name for the deployment of services","services":[{"name":"unity-sps-prototype","source":"unity-sds/unity-sps-prototype","version":"xxx","branch":"main"}],"extensions":{"kubernetes":{"clustername":"testclustertomthurs","owner":"tom","projectname":"testproject","nodegroups":{"group1":{"instancetype":"m5.xlarge","nodecount":"1"}}}}}'
jobs:
  run_unity_job:
    runs-on: ubuntu-latest

    name: Generate Metadata
    steps:
      - name: test generator output
        uses: TGPSKI/name-generator-node-action@v2
        id: generator
        with:
          separator: '_'
          length: '4'
          style: 'lowerCase'
          run: echo "latest,${{ steps.generator.outputs.name }}"



    # name: Parse Metadata and Execute
    # steps:
    #   # To use this repository's private action,
    #   # you must check out the repository
    #   - name: Checkout
    #     uses: actions/checkout@v3
    #   - name: install act
    #     run: curl -s https://raw.githubusercontent.com/nektos/act/master/install.sh | bash && echo "/home/ubuntu/unity-cs/bin" >> $GITHUB_PATH        
    #   - name: test
    #     run: echo "-P ubuntu-latest=catthehacker/ubuntu:act-latest" > ~/.actrc &&
    #          echo "-P ubuntu-22.04=catthehacker/ubuntu:act-22.04" >> ~/.actrc &&
    #          echo "-P ubuntu-20.04=catthehacker/ubuntu:act-20.04" >> ~/.actrc &&
    #          echo "-P ubuntu-18.04=catthehacker/ubuntu:act-18.04" >> ~/.actrc
    #   - name: Unity custom action step
    #     uses: unity-sds/unity-cs-action@0de7e4a8b3786fd603b69d91a6cf520283dbc48a
    #     id: hello
    #     with:
    #       token: ${{ secrets.TOKEN }}
    #       ucsmetadata: ${{ inputs.METADATA }}
    #   # Use the output from the `hello` step
    #   - name: Get the output time
    #     run: echo "The time was ${{ steps.hello.outputs.eksmeta }}"
