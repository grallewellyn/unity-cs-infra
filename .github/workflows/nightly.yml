name: Nightly Build for Development Purposes Only
on:
  workflow_dispatch:
    branches: [ main ]
    inputs:
      # KEY:
      #   description: 'Access Key ID'
      #   required: false
      #   type: string
      #   default: ''
      # SECRET:
      #   description: 'Access Secret Key ID'
      #   required: false
      #   type: string
      #   default: ''
      # TOKEN:
      #   description: 'AWS Session Token'
      #   required: false
      #   type: string
      #   default: ''
      METADATA:
        description: 'UCS Metadata Definition'
        required: true
        type: string
        default: '{ 
                    "metadataVersion":"unity-cs-0.1", 
                    "exectarget": "github", 
                    "deploymentName":"some name for the deployment of services", 
                    "services":[ 
                      { 
                        "name":"unity-sps-prototype", 
                        "source":"unity-sds/unity-sps-prototype", 
                        "version":"xxx","branch":"main" 
                      } 
                    ], 
                    "extensions":{ 
                      "kubernetes":{ 
                        "clustername":"testclustertomthurs", 
                        "owner":"tom", 
                        "projectname":"testproject", 
                        "nodegroups":{ 
                          "group1":{
                            "instancetype":"m5.xlarge", 
                            "nodecount":"1" 
                          } 
                        } 
                      } 
                    } 
                  }'

jobs:
  configure_unity_job:
    env: 
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      metadata: ''
    runs-on: ubuntu-latest
    steps:
      - name: Write METADATA to file
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: "nightly_metadata.json"
          json: ${{ inputs.METADATA }}

      - name: Generate Nightly ID
        uses: TGPSKI/name-generator-node-action@v2
        id: generator
        with:
          separator: '_'
          length: '2'
          style: 'lowerCase'

      - name: Update METADATA with nightly values
        uses: jossef/action-set-json-field@v2.1
        with:
          file: nightly_metadata.json
          field: extensions.kubernetes.owner
          value: uc-s-nightly

      - name: Update METADATA with nightly values
        uses: jossef/action-set-json-field@v2.1
        with:
          file: nightly_metadata.json
          field: extensions.kubernetes.clustername
          value: ucsnightlycluster

      - name: Update METADATA with nightly values
        uses: jossef/action-set-json-field@v2.1
        with:
          file: nightly_metadata.json
          field: deploymentName
          value: Unity CS Nightly Build

      - name: Update METADATA with nightly values
        uses: jossef/action-set-json-field@v2.1
        with:
          file: nightly_metadata.json
          field: services.0.name
          value: unity-sps-prototype-nightly

      - name: Read Nightly Metadata
        id: nightly_build_metadata
        run: NEW_NEW_METADATA=$( cat nightly_metadata.json | jq --compact-output )
      # - name: Read Nightly Metadata
      #   id: nightly_build_metadata
      #   uses: andstor/file-reader-action@v1
      #   with:
      #     path: "nightly_metadata.json"

      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v3

      - name: install act
        run: curl -s https://raw.githubusercontent.com/nektos/act/master/install.sh | bash && echo "/home/ubuntu/unity-cs/bin" >> $GITHUB_PATH        

      - name: Output original inputs
        run: echo '${{ inputs.METADATA }}'

      - name: Output new inputs
        run: echo '${{ steps.nightly_build_metadata.outputs.contents }}'

      - name: Output new new inputs
        run: echo "::set-env name=NEW_NEW_METADATA::${{ NEW_NEW_METADATA }}""

      # - name: test
      #   run: echo "-P ubuntu-latest=catthehacker/ubuntu:act-latest" > ~/.actrc &&
      #        echo "-P ubuntu-22.04=catthehacker/ubuntu:act-22.04" >> ~/.actrc &&
      #        echo "-P ubuntu-20.04=catthehacker/ubuntu:act-20.04" >> ~/.actrc &&
      #        echo "-P ubuntu-18.04=catthehacker/ubuntu:act-18.04" >> ~/.actrc

      # - name: Unity custom action step
      #   uses: unity-sds/unity-cs-action@0de7e4a8b3786fd603b69d91a6cf520283dbc48a
      #   id: hello
      #   env: 
      #     NIGHTLY_METADATA: ${ steps.nightly_build_metadata.outputs.contents }
      #   with:
      #     token: ${{ secrets.TOKEN }}
      #     ucsmetadata: $NIGHTLY_METADATA

      # # Use the output from the `hello` step
      # - name: Get the output time
      #   run: echo "The time was ${{ steps.hello.outputs.eksmeta }}"
