# This is a basic workflow to help you get started with Actions

name: AWS EKS Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ ucs-template ]
  # pull_request:
  #   branches: [ ucs-template ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    branches: [ main ]
    inputs:
      AWS_ACCESS_KEY_ID:
        description: 'Access Key ID'
        required: true
        type: string
        default: ''
      AWS_ACCESS_KEY_SECRET:
        description: 'Access Secret Key ID'
        required: true
        type: string
        default: ''
      AWS_SESSION_TOKEN:
        description: 'AWS Session Token'
        required: true
        type: string
        default: ''
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deployment"
  deployment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Set up current working directory with the repo contents
      - uses: actions/checkout@v2

      # Determine contents of working directory
      - name: Display contents of working directory
        run: ls -al

      # Install eksctl to launch EKS
      - name: Install eksctl
        run: |
         curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && \
         sudo mv /tmp/eksctl /usr/local/bin && \
         eksctl version

      # Render template

      # Launch EKS
      - name: Launch EKS cluster
        run: env && export AWS_ACCESS_KEY_ID=$INPUT_AWS_ACCESS_KEY_ID && export AWS_SECRET_ACCESS_KEY=$INPUT_AWS_ACCESS_KEY_SECRET && export AWS_SESSION_TOKEN=$INPUT_AWS_SESSION_TOKEN && env && ./build/eksctl/deploy.sh