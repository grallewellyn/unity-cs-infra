# This is a basic workflow to help you get started with Actions

name: AWS EKS Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ ucs-template ]
  # pull_request:
  #   branches: [ ucs-template ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    branches: [ ucs-template ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deployment"
  deployment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}

      ## Check Terraform formatting
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      ## Init terraform
      - name: Terraform Init
        id: init
        run: terraform init

      ## Validate Terraform
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      ## Plan Terraform
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      ## Fail the job if terraform plan doesn't succeed
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
#        if: github.ref == 'refs/heads/smolenski_tf_test' && github.event_name == 'push'
        run: terraform apply -auto-approve
