# This is a basic workflow to help you get started with Actions

name: AWS EKS Deployment
env:
  EKSClusterRegion: us-west-2
  EKSClusterVersion: 1.21
  EKSClusterAMI: ami-01fe93a8bc6cb9bef
  EKSKubeProxyVersion: v1.21.2-eksbuild.2
  EKSCoreDNSVersion: v1.8.4-eksbuild.1
  EKSSubnetConfigA: "us-west-2a: { id: subnet-00db2965967acb6b1 }"
  EKSSubnetConfigB: "us-west-2b: { id: subnet-092597c48cfec3f04 }"
  EKSSecurityGroup: "sg-09bd8de0af1c3c99a"
  EKSSharedNodeSecurityGroup: "sg-09bd8de0af1c3c99a"
  ServiceArn: ${{ secrets.EKSSERVICEARN }}
  InstanceRoleArn: ${{ secrets.EKSINSTANCEROLEARN }}
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ ucs-template ]
  # pull_request:
  #   branches: [ ucs-template ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    branches: [ main ]
    inputs:
      KEY:
        description: 'Access Key ID'
        required: true
        type: string
        default: ''
      SECRET:
        description: 'Access Secret Key ID'
        required: true
        type: string
        default: ''
      TOKEN:
        description: 'AWS Session Token'
        required: true
        type: string
        default: ''
      CLUSTERNAME:
        description: 'EKS Cluster Name'
        required: true
        type: string
      MINNODES:
        description: 'Minimum Cluster Nodes'
        required: false
        type: string
      MAXNODES:
        description: 'Max Cluster Nodes'
        required: false
        type: string
      DESIREDNODES:
        description: 'Desired Cluster Nodes'
        required: false
        type: string
      INSTANCETYPE:
        description: 'EC2 Instance Type'
        type: string
        required: false
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deployment"
  deployment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Set up current working directory with the repo contents
      - uses: actions/checkout@v2

      # Determine contents of working directory
      - name: Display contents of working directory
        run: ls -al

      # Install eksctl to launch EKS
      - name: Install eksctl
        run: |
         curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && \
         sudo mv /tmp/eksctl /usr/local/bin && \
         eksctl version

      - name: Install Unity Transformer
        run: |
          curl --silent --location https://github.com/unity-sds/unity-cs-terraform-transformer/releases/download/0.1.5-ALPHA/unity-cs-terraform-transformer-0.1.6-Alpha-linux-amd64.tar.gz | tar xz -C /tmp
          sudo mv /tmp/unity-cs-terraform-transformer /usr/local/bin

      # Render template
      - name: Render Template
        run: |
          unity-cs-terraform-transformer eks --clustername TestCluster > build/eksctl/eksctl-config.yaml
      # Launch EKS
      - name: Launch EKS cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ inputs.KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ inputs.SECRET }}
          AWS_SESSION_TOKEN: ${{ inputs.TOKEN }}
        run: eksctl create cluster -f build/eksctl/eksctl-config.yaml
