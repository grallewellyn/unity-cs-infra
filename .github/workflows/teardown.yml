# Unity teardown workflow

name: CI Teardown

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ ucs-template ]
  pull_request:
    branches: [ ucs-template ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    branches: [ ucs-template ]

# These steps will tear down a unity project using the provided terraform scripts
jobs:
  # This workflow contains a single job called "teardown"
  teardown:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out the repo to deploy
      # While cloning the repository:
      #   - it clones the repo into the given `path`
      #   - it checks out the branch defined at `ref`
      - name: Clone the service repository for deployment
        uses: actions/checkout@v2
        with:
          repository: unity-sds/unity-cs-sps-demo
          path: resources/deployable
          ref: smolenski_tf_test

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}

      - name: Terraform Format
        working-directory: ./resources/deployable/terraform-unity
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: ./resources/deployable/terraform-unity
        id: init
        run: terraform init

      - name: Terraform Validate
        working-directory: ./resources/deployable/terraform-unity
        id: validate
        run: terraform validate -no-color

      # Creates a terraform destroy plan
      - name: Terraform Teardown Plan
        working-directory: ./resources/deployable/terraform-unity
#        if: github.ref == 'refs/heads/smolenski_tf_test' && github.event_name == 'push'
        run: terraform plan -destroy

